<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyu.dao.IAdminDao">
	<resultMap type="com.qiyu.bean.Admin" id="AdminResultMap">
		<id column="id" property="id" jdbcType="BIGINT" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="level" property="level" jdbcType="TINYINT" />
	    <result column="account" property="account" jdbcType="VARCHAR" />
	    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
	    <result column="building_id" property="buildingId" jdbcType="BIGINT" />
	    <result column="store_id" property="storeId" jdbcType="BIGINT" />
	    <result column="init_update" property="initUpdate" jdbcType="TINYINT" />
	</resultMap>

	<select id="getAdminList" parameterType="java.util.Map" resultMap="AdminResultMap">
		select * from admin 
		<where>
			<if test="level !=null and ( level ==1 or level == '1')"> and store_id =0 </if>
			<if test="level !=null and ( level ==2 or level == '2')"> and building_id =#{buildingId} </if>
		
			and level >1
		</where>  
		
	
	
	</select>
	
		<select id="getAccountAlready" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(id) from admin 
		<where>
			  and account =#{account} 
		</where>
	
	
	</select>
	
	
	<select id="loginAdmin" parameterType="java.util.Map" resultMap="AdminResultMap">
		select * from admin  where account=#{account} and pwd =#{pwd}
		
	
	
	</select>
	
	
	<insert id="addAdmin" parameterType="java.util.Map" >
		insert into admin(name,level,account,pwd,building_id,store_id) values(#{name},#{level},#{account},#{pwd},#{buildingId},#{storeId})
		
	</insert>
	
	<insert id="saveFileInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
		insert into file(url) values(#{url})
		
	</insert>
	
	<select id="getfile" parameterType="java.util.Map" resultType="com.qiyu.bean.FileInfo">
			select id,url from file where 
			id in <foreach collection="fileIds" close=")" item="item" separator="," open="(">#{item}</foreach>		
		</select>
	
	<update id="updatePwd" parameterType="java.util.Map" >
			update admin set
			pwd =#{pwd} where id=#{id} 
			 <if test="level !=null and ( level ==2 or level == '2')"> and building_id =#{buildingId} </if> 
	</update>
	
		<update id="updateAdmin" parameterType="java.util.Map" >
			update admin  set name=#{name} where building_id=#{id} and store_id#{storeId}
	</update>
	
			<update id="updateAdmin2" parameterType="java.util.Map" >
			update admin  set name=#{name} 
			<where>
			<if test="level !=null and  level !=1 and level != '1'">and building_id=#{buildingId}</if>
			 and store_id#{id}
			</where> 
	</update>
	
	<delete id="delAdmin" parameterType="java.util.Map" >
			delete from  admin where id =#{id}  <if test="level !=null and ( level ==2 or level == '2')"> and building_id =#{buildingId} </if> 
	</delete>

</mapper>