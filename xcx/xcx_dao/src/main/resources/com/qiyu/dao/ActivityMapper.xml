<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyu.dao.IActivityDao">
		<resultMap type="com.qiyu.bean.Activity" id="BaseResultMap">
			<id column="id" property="id" jdbcType="BIGINT" />
		    <result column="title" property="title" jdbcType="VARCHAR" />
		    <result column="building_id" property="buildingId" jdbcType="BIGINT" />
		    <result column="store_id" property="storeId" jdbcType="BIGINT" />
		    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
		    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		    <result column="phone" property="phone" jdbcType="VARCHAR" />
		    <result column="reminder_time" property="reminderTime" jdbcType="VARCHAR" />
		    <result column="pic" property="pic" jdbcType="VARCHAR" />
		    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
		    <result column="tag" property="tag" jdbcType="VARCHAR" />
		    <result column="cover" property="cover" jdbcType="VARCHAR" />
		    <result column="building_name" property="buildingName" jdbcType="VARCHAR" />
		    <result column="building_address" property="buildingAddress" jdbcType="VARCHAR" />
		    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
		</resultMap>
		
		<resultMap type="com.qiyu.bean.Activity" id="getActivityMap" extends="BaseResultMap">
			<collection property="coverList" column="cover" select="getfile"></collection>
			<collection property="picList" column="pic" select="getfile"></collection>
		</resultMap>
		
		<sql id="Base_Column_List">
			id,title,building_id,store_id,
			DATE_FORMAT(start_time,'%Y-%m-%d %H:%i:%s') start_time,
			DATE_FORMAT(end_time,'%Y-%m-%d %H:%i:%s') end_time,
			phone,create_time,reminder_time,pic,introduce,tag,cover,sign_up_ids
		</sql>
		<sql id="Base_Column_List_new">
			a.id,title,a.building_id,a.store_id,
			DATE_FORMAT(a.start_time,'%Y-%m-%d %H:%i:%s') start_time,
			DATE_FORMAT(a.end_time,'%Y-%m-%d %H:%i:%s') end_time,
			a.phone,a.reminder_time,a.pic,a.introduce,a.tag,a.cover,a.sign_up_ids
		</sql>
		
		<resultMap type="com.qiyu.bean.Activity" id="getUserActivityListMap" extends="BaseResultMap">
			<association property="store" column="store_id" select="com.qiyu.dao.IStoreDao.getStore"></association>
			<collection property="coverList" column="cover" select="getfile"></collection>
		</resultMap>
			
			<resultMap type="com.qiyu.bean.Activity" id="getActivityDetailMap" extends="BaseResultMap">
			 <result column="building_logo" property="buildingLogo" jdbcType="VARCHAR" />
			 <result column="sign_up_ids" property="signUpIds" jdbcType="VARCHAR" />
			 <result column="sign_up_num" property="signUpNum" jdbcType="VARCHAR" />
			<association property="store" column="store_id" select="com.qiyu.dao.IStoreDao.getStore"></association>
			<collection property="picList" column="pic" select="getfile"></collection>
		</resultMap>
		
		
		<select id="getfile" parameterType="java.util.Map" resultType="com.qiyu.bean.FileInfo">
			select id,url from file where find_in_set(id,#{ids})		
		</select>

		<insert id="addActivity" parameterType="java.util.Map">
			insert into activity(
				title,building_id,store_id,	start_time,	end_time,  phone, reminder_time, pic, introduce,tag,cover,sign_up_ids	
			) 
			values(
			 #{title}, #{buildingId}, #{storeId}, #{startTime},	 #{endTime} ,  #{phone},  #{reminderTime},	#{pic}, #{introduce} , #{tag}, #{cover},'[]'
			)
			
		</insert>
		
		
		<delete id="delActivity" parameterType="java.util.Map">
			delete from activity where id =#{id}  <if test="level !=null and ( level ==2 or level == '2')"> and building_id =#{buildingId} </if>	
		</delete>
		
		
		<update id="updateActivity" parameterType="java.util.Map">
			update activity 
			<set>
				<if test="title !=null"> title  =#{title}, </if> 
				<if test="phone !=null">  phone =#{phone}, </if>
				<if test="pic !=null"> pic=#{pic}, </if>
				<if test="introduce !=null"> introduce =#{introduce}, </if>
				<if test="tag !=null"> tag =#{tag}, </if>
				<if test="cover !=null"> cover =#{cover}, </if>
				<if test="isTop !=null and (isTop ==1 or isTop =='1')"> is_top =now(), </if>
				<if test="signUpId !=null">sign_up_ids= JSON_ARRAY_APPEND(sign_up_ids, '$',#{signUpId}) </if>
			</set>	
			where id =#{id} 
			<if test="level !=null and ( level ==2 or level == '2')"> and building_id =#{buildingId} </if>
			<if test="signUpId !=null"> 
				and end_time &gt; now()
				and JSON_CONTAINS(sign_up_ids, &apos;${signUpId}&apos;)=0 
			</if>
			
		</update>
		
		<select id="getActivity" parameterType="java.util.Map" resultMap="getActivityMap">
			select <include refid="Base_Column_List" /> from activity where id =#{id}
		</select>
		
		<select id="getSignUpIds" parameterType="java.util.Map" resultType="java.lang.String">
			select sign_up_ids from activity where id =#{id} and end_time &gt; now()
		</select>
		
		<select id="getActivityListNum" parameterType="java.util.Map" resultType="java.lang.Integer">
			select count(a.id)
				from activity a 
				<where>
				  <if test="level !=null and ( level ==2 or level == '2')"> and a.building_id =#{buildingId} </if>
				<if test="type !=null and (type ==1 or type =='1')">and a.end_time >now()</if>
				<if test="type !=null and (type ==2 or type =='2')">and a.end_time &lt;now()</if>
			</where>

		</select>
		
		
		<select id="getActivityList" parameterType="java.util.Map" resultMap="getActivityMap">
			select <include refid="Base_Column_List_new" />,JSON_LENGTH(a.sign_up_ids) sign_up_num,b.name building_name,s.name store_name from activity a 
			left join building b on a.building_id = b.id
			left join store s on a.store_id = s.id
			<where>
				  <if test="level !=null and ( level ==2 or level == '2')"> and a.building_id =#{buildingId} </if>
				<if test="type !=null and (type ==1 or type =='1')">and a.end_time >now()</if>
				<if test="type !=null and (type ==2 or type =='2')">and a.end_time &lt;now()</if>
			</where>
			limit #{startRow},#{pageSize}
		</select>
		
		
		<select id="getActivityDetail" parameterType="java.util.Map" resultMap="getActivityDetailMap">
			select <include refid="Base_Column_List_new" />,JSON_LENGTH(a.sign_up_ids) sign_up_num ,f.url building_logo ,b.address building_address
				from activity a 
				left join building b on a.building_id =b.id
				left join file f on f.id = b.logo
				where a.id =#{id}
		</select>
		
		
		<select id="getUserActivityListNum" parameterType="java.util.Map" resultType="java.lang.Integer">
			select count(a.id)
				from activity a 
				
				where building_id =#{buildingId}     and a.end_time >now()

		</select>
		
		<select id="getUserActivityList" parameterType="java.util.Map" resultMap="getUserActivityListMap">
			select <include refid="Base_Column_List_new" />,b.address building_address
				from activity a 
				left join building b on a.building_id =b.id
				
				where building_id =#{buildingId}     and a.end_time >now()
				order by is_top desc ,end_time limit #{startRow},#{pageSize}
		</select>

</mapper>